version: "3"
services:
  gcs:
    image: fsouza/fake-gcs-server
    ports:
      - 4443:4443
    volumes:
      - ./lecturia-public-storage:/data/${GOOGLE_CLOUD_STORAGE_PUBLIC_BUCKET_NAME}
    command:
      ["-scheme", "http", "-port", "4443", "-external-url", "http://gcs:4443"]
  gcloud-tasks-emulator:
    image: ghcr.io/aertje/cloud-tasks-emulator:latest
    command: -host 0.0.0.0 -port 8123 -queue "projects/${GOOGLE_CLOUD_PROJECT}/locations/${GOOGLE_CLOUD_LOCATION}/queues/lecture-queue"
    ports:
      - "${TASKS_PORT:-8123}:8123"
    environment:
      APP_ENGINE_EMULATOR_HOST: http://localhost:8080
  firestore:
    build:
      context: .
      dockerfile: Dockerfile.firebase
      args:
        FIREBASE_VERSION: 13.3.0
    container_name: firestore-emulator
    command: [
      "firebase","emulators:start",
      "--project=${GOOGLE_CLOUD_PROJECT}",
      "--only","firestore",
      "--import=/srv/firebase/data",
      "--export-on-exit"
    ]
    environment:
      - FIRESTORE_EMULATOR_HOST=0.0.0.0:8002
      - FIREBASE_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GCLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
    ports:
      - "4000:4000"   # Emulator UI
      - "8002:8002"   # Firestore
    volumes:
      - firestore_data:/srv/firebase/data:rw
  lecturia:
    build:
      context: .
      dockerfile: Dockerfile
    image: lecturia:latest
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - STORAGE_EMULATOR_HOST=http://gcs:4443
      - LECTURIA_WORKER_URL=http://worker:8001
      - FIRESTORE_EMULATOR_HOST=firestore:8002
    env_file:
      - .env
    depends_on:
      - gcs
      - gcloud-tasks-emulator
      - firestore
  worker:
    image: lecturia:latest
    command: ["fastapi", "run", "src/lecturia/cloud_pipeline/workflow.py", "--host", "0.0.0.0", "--port", "8001"]
    ports:
      - "8001:8001"
    volumes:
      - .:/app
    environment:
      - STORAGE_EMULATOR_HOST=http://gcs:4443
      - FIRESTORE_EMULATOR_HOST=firestore:8002
    env_file:
      - .env
volumes:
  firestore_data:
